[{"/Users/varaprasad/React-Firebase/react-firebase/src/index.js":"1","/Users/varaprasad/React-Firebase/react-firebase/src/App.js":"2","/Users/varaprasad/React-Firebase/react-firebase/src/reportWebVitals.js":"3","/Users/varaprasad/React-Firebase/react-firebase/src/components/Contacts.js":"4","/Users/varaprasad/React-Firebase/react-firebase/src/components/ContactForm.js":"5","/Users/varaprasad/React-Firebase/react-firebase/src/firebase.js":"6"},{"size":656,"mtime":1611447720281,"results":"7","hashOfConfig":"8"},{"size":754,"mtime":1617366722338,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611446509649,"results":"10","hashOfConfig":"8"},{"size":4079,"mtime":1617332193490,"results":"11","hashOfConfig":"8"},{"size":3613,"mtime":1617120619309,"results":"12","hashOfConfig":"8"},{"size":571,"mtime":1616698852735,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"103996n",{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/Users/varaprasad/React-Firebase/react-firebase/src/index.js",["29","30"],"import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport $ from \"jquery\";\n\nimport Popper from \"popper.js\";\n\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["31","32"],"/Users/varaprasad/React-Firebase/react-firebase/src/App.js",["33","34"],"/Users/varaprasad/React-Firebase/react-firebase/src/reportWebVitals.js",[],"/Users/varaprasad/React-Firebase/react-firebase/src/components/Contacts.js",["35","36"],"/Users/varaprasad/React-Firebase/react-firebase/src/components/ContactForm.js",["37","38"],"import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction ContactForm(props) {\n  const initialFieldValues = {\n    fullName: \"\",\n    mobile: \"\",\n    email: \"\",\n    address: \"\"\n  };\n  var [values, setValues] = useState(initialFieldValues);\n  useEffect(() => {\n    if (props.currentId === \"\") {\n      setValues({ ...initialFieldValues });\n    } else {\n      setValues({ ...props.contacts[props.currentId] });\n    }\n  }, [props.currentId, props.contacts]);\n\n  const handleInputChange = (e) => {\n    var { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    props.addorEdit(values);\n  };\n\n  const resetForm = () => {\n    setValues({ ...initialFieldValues });\n    props.resetCurrentItemId();\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" style={{ width: \"40px\" }}>\n            <FontAwesomeIcon icon=\"user\" />\n          </span>\n        </div>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"fullName\"\n          aria-label=\"fullName\"\n          name=\"fullName\"\n          value={values.fullName}\n          onChange={handleInputChange}\n          aria-describedby=\"addon-wrapping\"\n          required\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" style={{ width: \"40px\" }}>\n            <FontAwesomeIcon icon=\"mobile\" />\n          </span>\n        </div>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"mobile\"\n          aria-label=\"mobile\"\n          name=\"mobile\"\n          value={values.mobile}\n          onChange={handleInputChange}\n          aria-describedby=\"addon-wrapping\"\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" style={{ width: \"40px\" }}>\n            <FontAwesomeIcon icon=\"envelope\" />\n          </span>\n        </div>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"email\"\n          aria-label=\"email\"\n          name=\"email\"\n          value={values.email}\n          onChange={handleInputChange}\n          aria-describedby=\"addon-wrapping\"\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" style={{ width: \"40px\" }}>\n            <FontAwesomeIcon icon=\"address-card\" />\n          </span>\n        </div>\n        <textarea\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"address\"\n          aria-label=\"address\"\n          name=\"address\"\n          value={values.address}\n          onChange={handleInputChange}\n          style={{ resize: \"none\" }}\n          aria-describedby=\"addon-wrapping\"\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <input\n          type=\"submit\"\n          value={props.currentId == \"\" ? \"Submit\" : \"Save\"}\n          className=\"btn btn-primary btn-block\"\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <input\n          type=\"button\"\n          value=\"reset\"\n          className=\"btn btn-secondary btn-block\"\n          onClick={resetForm}\n        />\n      </div>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","/Users/varaprasad/React-Firebase/react-firebase/src/firebase.js",[],{"ruleId":"39","severity":1,"message":"40","line":3,"column":8,"nodeType":"41","messageId":"42","endLine":3,"endColumn":9},{"ruleId":"39","severity":1,"message":"43","line":5,"column":8,"nodeType":"41","messageId":"42","endLine":5,"endColumn":14},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"39","severity":1,"message":"48","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"39","severity":1,"message":"49","line":6,"column":10,"nodeType":"41","messageId":"42","endLine":6,"endColumn":25},{"ruleId":"50","severity":1,"message":"51","line":107,"column":25,"nodeType":"52","endLine":112,"endColumn":26},{"ruleId":"50","severity":1,"message":"51","line":115,"column":25,"nodeType":"52","endLine":120,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":18,"column":6,"nodeType":"55","endLine":18,"endColumn":39,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":113,"column":34,"nodeType":"59","messageId":"60","endLine":113,"endColumn":36},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'swal' is defined but never used.","'FontAwesomeIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialFieldValues'. Either include it or remove the dependency array.","ArrayExpression",["63"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [props.currentId, props.contacts, initialFieldValues]",{"range":"66","text":"67"},[487,520],"[props.currentId, props.contacts, initialFieldValues]"]