[{"/Users/varaprasad/React-Firebase/react-firebase/src/index.js":"1","/Users/varaprasad/React-Firebase/react-firebase/src/App.js":"2","/Users/varaprasad/React-Firebase/react-firebase/src/reportWebVitals.js":"3","/Users/varaprasad/React-Firebase/react-firebase/src/components/Contacts.js":"4","/Users/varaprasad/React-Firebase/react-firebase/src/components/ContactForm.js":"5","/Users/varaprasad/React-Firebase/react-firebase/src/firebase.js":"6"},{"size":656,"mtime":1611447720281,"results":"7","hashOfConfig":"8"},{"size":784,"mtime":1616701384690,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611446509649,"results":"10","hashOfConfig":"8"},{"size":4040,"mtime":1616722822699,"results":"11","hashOfConfig":"8"},{"size":3613,"mtime":1617120619309,"results":"12","hashOfConfig":"8"},{"size":571,"mtime":1616698852735,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"103996n",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/Users/varaprasad/React-Firebase/react-firebase/src/index.js",["30","31"],"import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport $ from \"jquery\";\n\nimport Popper from \"popper.js\";\n\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["32","33"],"/Users/varaprasad/React-Firebase/react-firebase/src/App.js",["34","35","36"],"import logo from \"./logo.svg\";\nimport swal from \"sweetalert\";\nimport \"./App.css\";\nimport Contacts from \"./components/Contacts\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCoffee,\n  faCheckSquare,\n  faUser,\n  faMobile,\n  faEnvelope,\n  faAddressCard,\n  faPencilAlt,\n  faTrash\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n  faCoffee,\n  faCheckSquare,\n  faUser,\n  faMobile,\n  faEnvelope,\n  faAddressCard,\n  faPencilAlt,\n  faTrash\n);\n\nfunction App() {\n  return (\n    <div className=\"row d-flex justify-content-center m-2\">\n      <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-9\">\n        <Contacts></Contacts>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/varaprasad/React-Firebase/react-firebase/src/reportWebVitals.js",[],"/Users/varaprasad/React-Firebase/react-firebase/src/components/Contacts.js",["37","38"],"import React, { useState, useEffect } from \"react\";\nimport ContactForm from \"./ContactForm\";\nimport firebaseDB from \"../firebase\";\nimport swal from \"sweetalert\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Contacts() {\n  /*   const showAlert = () => {\n    swal(\"Good job!\", \"Record inserted successfully\", \"success\");\n  }; */\n\n  const addorEdit = (obj) => {\n    if (currentId === \"\") {\n      firebaseDB.child(\"contacts\").push(obj, (err) => {\n        if (err) {\n          console.log(err);\n        } else {\n          setCurrentId(\"\");\n          swal(\"\", \"Record inserted successfully\", \"success\");\n        }\n      });\n    } else {\n      firebaseDB.child(`contacts/${currentId}`).set(obj, (err) => {\n        if (err) {\n          console.log(err);\n        } else {\n          setCurrentId(\"\");\n          swal(\"\", \"Record updated successfully\", \"success\");\n        }\n      });\n    }\n  };\n\n  var [currentId, setCurrentId] = useState(\"\");\n  var [contacts, setContacts] = useState({});\n\n  const resetCurrentItemId = () => {\n    setCurrentId(\"\");\n  };\n\n  const deleteItem = (id) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this record!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then((isConfirm) => {\n      if (isConfirm) {\n        firebaseDB.child(`contacts/${id}`).remove((err) => {\n          if (err) {\n            console.log(err);\n          }\n        });\n        swal(\"Record deleted successfully!!\", \"\", \"success\");\n      } else {\n        swal(\"Cancelled\", \"Your record is safe :)\", \"error\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    firebaseDB.child(\"contacts\").on(\"value\", (snapshot) => {\n      if (snapshot.val() != null) {\n        setContacts({\n          ...snapshot.val()\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-4 text-center\">Contacts Application</h1>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-5 col-xl-5\">\n          <ContactForm\n            {...{ addorEdit, currentId, contacts, resetCurrentItemId }}\n          />\n        </div>\n        <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-7 col-xl-7\">\n          <h1>List of Contacts</h1>\n          <div class=\"table-responsive\">\n            <table className=\"table\">\n              <thead className=\"thead-dark\">\n                <tr>\n                  <th scope=\"col\">Full Name</th>\n                  <th scope=\"col\">Mobile</th>\n                  <th scope=\"col\">Email</th>\n                  <th scope=\"col\">Address</th>\n                  <th scope=\"col\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.keys(contacts).map((id) => {\n                  return (\n                    <tr key={id}>\n                      <td>{contacts[id].fullName}</td>\n                      <td>{contacts[id].mobile}</td>\n                      <td>{contacts[id].email}</td>\n                      <td>{contacts[id].address}</td>\n                      <td>\n                        <a\n                          className=\"btn text-primary\"\n                          onClick={() => {\n                            setCurrentId(id);\n                          }}\n                        >\n                          <FontAwesomeIcon icon=\"pencil-alt\" />\n                        </a>\n                        <a\n                          className=\"btn text-danger\"\n                          onClick={() => {\n                            deleteItem(id);\n                          }}\n                        >\n                          <FontAwesomeIcon icon=\"trash\" />\n                        </a>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Contacts;\n","/Users/varaprasad/React-Firebase/react-firebase/src/components/ContactForm.js",["39","40"],"/Users/varaprasad/React-Firebase/react-firebase/src/firebase.js",[],{"ruleId":"41","severity":1,"message":"42","line":3,"column":8,"nodeType":"43","messageId":"44","endLine":3,"endColumn":9},{"ruleId":"41","severity":1,"message":"45","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":14},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"41","severity":1,"message":"50","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":12},{"ruleId":"41","severity":1,"message":"51","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":12},{"ruleId":"41","severity":1,"message":"52","line":7,"column":10,"nodeType":"43","messageId":"44","endLine":7,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":107,"column":25,"nodeType":"55","endLine":112,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":115,"column":25,"nodeType":"55","endLine":120,"endColumn":26},{"ruleId":"56","severity":1,"message":"57","line":18,"column":6,"nodeType":"58","endLine":18,"endColumn":39,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":113,"column":34,"nodeType":"62","messageId":"63","endLine":113,"endColumn":36},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["64"],"no-negated-in-lhs",["65"],"'logo' is defined but never used.","'swal' is defined but never used.","'FontAwesomeIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialFieldValues'. Either include it or remove the dependency array.","ArrayExpression",["66"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [props.currentId, props.contacts, initialFieldValues]",{"range":"69","text":"70"},[487,520],"[props.currentId, props.contacts, initialFieldValues]"]