[{"/Users/varaprasad/React-Firebase/react-firebase/src/index.js":"1","/Users/varaprasad/React-Firebase/react-firebase/src/App.js":"2","/Users/varaprasad/React-Firebase/react-firebase/src/reportWebVitals.js":"3","/Users/varaprasad/React-Firebase/react-firebase/src/components/Contacts.js":"4","/Users/varaprasad/React-Firebase/react-firebase/src/components/ContactForm.js":"5","/Users/varaprasad/React-Firebase/react-firebase/src/firebase.js":"6"},{"size":656,"mtime":1611447720281,"results":"7","hashOfConfig":"8"},{"size":722,"mtime":1612661803299,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611446509649,"results":"10","hashOfConfig":"8"},{"size":3822,"mtime":1612721962696,"results":"11","hashOfConfig":"8"},{"size":3551,"mtime":1612661533282,"results":"12","hashOfConfig":"8"},{"size":571,"mtime":1612654399045,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"103996n",{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"17"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"/Users/varaprasad/React-Firebase/react-firebase/src/index.js",["32","33"],"import \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport $ from \"jquery\";\n\nimport Popper from \"popper.js\";\n\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["34","35"],"/Users/varaprasad/React-Firebase/react-firebase/src/App.js",["36","37","38"],"import logo from \"./logo.svg\";\nimport swal from \"sweetalert\";\nimport \"./App.css\";\nimport Contacts from \"./components/Contacts\";\n\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCoffee,\n  faCheckSquare,\n  faUser,\n  faMobile,\n  faEnvelope,\n  faAddressCard,\n  faPencilAlt,\n  faTrash\n} from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(\n  faCoffee,\n  faCheckSquare,\n  faUser,\n  faMobile,\n  faEnvelope,\n  faAddressCard,\n  faPencilAlt,\n  faTrash\n);\n\nfunction App() {\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-8 offset-md-2\">\n        <Contacts></Contacts>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/varaprasad/React-Firebase/react-firebase/src/reportWebVitals.js",[],"/Users/varaprasad/React-Firebase/react-firebase/src/components/Contacts.js",["39","40"],"import React, { useState, useEffect } from \"react\";\nimport ContactForm from \"./ContactForm\";\nimport firebaseDB from \"../firebase\";\nimport swal from \"sweetalert\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction Contacts() {\n  /*   const showAlert = () => {\n    swal(\"Good job!\", \"Record inserted successfully\", \"success\");\n  }; */\n\n  const addorEdit = (obj) => {\n    if (currentId === \"\") {\n      firebaseDB.child(\"contacts\").push(obj, (err) => {\n        if (err) {\n          console.log(err);\n        } else {\n          setCurrentId(\"\");\n          swal(\"\", \"Record inserted successfully\", \"success\");\n        }\n      });\n    } else {\n      firebaseDB.child(`contacts/${currentId}`).set(obj, (err) => {\n        if (err) {\n          console.log(err);\n        } else {\n          setCurrentId(\"\");\n          swal(\"\", \"Record updated successfully\", \"success\");\n        }\n      });\n    }\n  };\n\n  var [currentId, setCurrentId] = useState(\"\");\n  var [contacts, setContacts] = useState({});\n\n  const resetCurrentItemId = () => {\n    setCurrentId(\"\");\n  };\n\n  const deleteItem = (id) => {\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this record!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true\n    }).then((isConfirm) => {\n      if (isConfirm) {\n        firebaseDB.child(`contacts/${id}`).remove((err) => {\n          if (err) {\n            console.log(err);\n          }\n        });\n        swal(\"Record deleted successfully!!\", \"\", \"success\");\n      } else {\n        swal(\"Cancelled\", \"Your record is safe :)\", \"error\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    firebaseDB.child(\"contacts\").on(\"value\", (snapshot) => {\n      if (snapshot.val() != null) {\n        setContacts({\n          ...snapshot.val()\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"jumbotron jumbotron-fluid\">\n        <div className=\"container\">\n          <h1 className=\"display-4 text-center\">Contacts Application</h1>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-5\">\n          <ContactForm\n            {...{ addorEdit, currentId, contacts, resetCurrentItemId }}\n          />\n        </div>\n        <div className=\"col-md-7\">\n          <h1>List of Contacts</h1>\n          <table className=\"table\">\n            <thead className=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">Full Name</th>\n                <th scope=\"col\">Mobile</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Address</th>\n                <th scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(contacts).map((id) => {\n                return (\n                  <tr key={id}>\n                    <td>{contacts[id].fullName}</td>\n                    <td>{contacts[id].mobile}</td>\n                    <td>{contacts[id].email}</td>\n                    <td>{contacts[id].address}</td>\n                    <td>\n                      <a\n                        className=\"btn text-primary\"\n                        onClick={() => {\n                          setCurrentId(id);\n                        }}\n                      >\n                        <FontAwesomeIcon icon=\"pencil-alt\" />\n                      </a>\n                      <a\n                        className=\"btn text-danger\"\n                        onClick={() => {\n                          deleteItem(id);\n                        }}\n                      >\n                        <FontAwesomeIcon icon=\"trash\" />\n                      </a>\n                    </td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Contacts;\n","/Users/varaprasad/React-Firebase/react-firebase/src/components/ContactForm.js",["41","42","43"],"import React, { useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nfunction ContactForm(props) {\n  const initialFieldValues = {\n    fullName: \"\",\n    mobile: \"\",\n    email: \"\",\n    address: \"\"\n  };\n  var [values, setValues] = useState(initialFieldValues);\n  useEffect(() => {\n    if (props.currentId == \"\") {\n      setValues({ ...initialFieldValues });\n    } else {\n      setValues({ ...props.contacts[props.currentId] });\n    }\n  }, [props.currentId, props.contacts]);\n\n  const handleInputChange = (e) => {\n    var { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    });\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    props.addorEdit(values);\n  };\n\n  const resetForm = () => {\n    props.resetCurrentItemId();\n  };\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleFormSubmit}>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" style={{ width: \"40px\" }}>\n            <FontAwesomeIcon icon=\"user\" />\n          </span>\n        </div>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"fullName\"\n          aria-label=\"fullName\"\n          name=\"fullName\"\n          value={values.fullName}\n          onChange={handleInputChange}\n          aria-describedby=\"addon-wrapping\"\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" style={{ width: \"40px\" }}>\n            <FontAwesomeIcon icon=\"mobile\" />\n          </span>\n        </div>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"mobile\"\n          aria-label=\"mobile\"\n          name=\"mobile\"\n          value={values.mobile}\n          onChange={handleInputChange}\n          aria-describedby=\"addon-wrapping\"\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" style={{ width: \"40px\" }}>\n            <FontAwesomeIcon icon=\"envelope\" />\n          </span>\n        </div>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"email\"\n          aria-label=\"email\"\n          name=\"email\"\n          value={values.email}\n          onChange={handleInputChange}\n          aria-describedby=\"addon-wrapping\"\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <div className=\"input-group-prepend\">\n          <span className=\"input-group-text\" style={{ width: \"40px\" }}>\n            <FontAwesomeIcon icon=\"address-card\" />\n          </span>\n        </div>\n        <textarea\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"address\"\n          aria-label=\"address\"\n          name=\"address\"\n          value={values.address}\n          onChange={handleInputChange}\n          style={{ resize: \"none\" }}\n          aria-describedby=\"addon-wrapping\"\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <input\n          type=\"submit\"\n          value={props.currentId == \"\" ? \"Submit\" : \"Save\"}\n          className=\"btn btn-primary btn-block\"\n        />\n      </div>\n      <div className=\"input-group mb-3\">\n        <input\n          type=\"button\"\n          value=\"Reset\"\n          className=\"btn btn-secondary btn-block\"\n          onClick={resetForm}\n        />\n      </div>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","/Users/varaprasad/React-Firebase/react-firebase/src/firebase.js",[],["44","45"],{"ruleId":"46","severity":1,"message":"47","line":3,"column":8,"nodeType":"48","messageId":"49","endLine":3,"endColumn":9},{"ruleId":"46","severity":1,"message":"50","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":14},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"46","severity":1,"message":"55","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"56","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":12},{"ruleId":"46","severity":1,"message":"57","line":7,"column":10,"nodeType":"48","messageId":"49","endLine":7,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":106,"column":23,"nodeType":"60","endLine":111,"endColumn":24},{"ruleId":"58","severity":1,"message":"59","line":114,"column":23,"nodeType":"60","endLine":119,"endColumn":24},{"ruleId":"61","severity":1,"message":"62","line":13,"column":25,"nodeType":"63","messageId":"64","endLine":13,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":18,"column":6,"nodeType":"67","endLine":18,"endColumn":39,"suggestions":"68"},{"ruleId":"61","severity":1,"message":"62","line":111,"column":34,"nodeType":"63","messageId":"64","endLine":111,"endColumn":36},{"ruleId":"51","replacedBy":"69"},{"ruleId":"53","replacedBy":"70"},"no-unused-vars","'$' is defined but never used.","Identifier","unusedVar","'Popper' is defined but never used.","no-native-reassign",["71"],"no-negated-in-lhs",["72"],"'logo' is defined but never used.","'swal' is defined but never used.","'FontAwesomeIcon' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialFieldValues'. Either include it or remove the dependency array.","ArrayExpression",["73"],["71"],["72"],"no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [props.currentId, props.contacts, initialFieldValues]",{"range":"76","text":"77"},[486,519],"[props.currentId, props.contacts, initialFieldValues]"]